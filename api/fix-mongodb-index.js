const mongoose = require('mongoose');
require('dotenv').config();

async function fixMongoDBIndex() {
  try {
    // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    await mongoose.connect(process.env.MONGOURL, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    
    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB');

    // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–ª–µ–∫—Ü—ñ—é movies
    const db = mongoose.connection.db;
    const moviesCollection = db.collection('movies');

    // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ —ñ–Ω–¥–µ–∫—Å–∏
    const indexes = await moviesCollection.indexes();
    console.log('üìã –ü–æ—Ç–æ—á–Ω—ñ —ñ–Ω–¥–µ–∫—Å–∏:', indexes.map(idx => ({ name: idx.name, key: idx.key })));

    // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —Ç–µ–∫—Å—Ç–æ–≤—ñ —ñ–Ω–¥–µ–∫—Å–∏
    for (const index of indexes) {
      if (index.name !== '_id_' && (
        index.textIndexVersion || 
        index.default_language || 
        Object.values(index.key || {}).includes('text')
      )) {
        try {
          await moviesCollection.dropIndex(index.name);
          console.log(`üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ —ñ–Ω–¥–µ–∫—Å: ${index.name}`);
        } catch (error) {
          console.log(`‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ —ñ–Ω–¥–µ–∫—Å ${index.name}:`, error.message);
        }
      }
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—ñ –ø—Ä–æ—Å—Ç—ñ —ñ–Ω–¥–µ–∫—Å–∏
    await moviesCollection.createIndex({ title: 1 });
    await moviesCollection.createIndex({ description: 1 });
    await moviesCollection.createIndex({ genres: 1 });
    await moviesCollection.createIndex({ releaseYear: 1 });
    await moviesCollection.createIndex({ type: 1 });
    await moviesCollection.createIndex({ 'pricing.isFree': 1 });

    console.log('‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤—ñ —ñ–Ω–¥–µ–∫—Å–∏');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const newIndexes = await moviesCollection.indexes();
    console.log('üìã –ù–æ–≤—ñ —ñ–Ω–¥–µ–∫—Å–∏:', newIndexes.map(idx => ({ name: idx.name, key: idx.key })));

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå –í—ñ–¥–∫–ª—é—á–µ–Ω–æ –≤—ñ–¥ MongoDB');
    process.exit(0);
  }
}

fixMongoDBIndex();